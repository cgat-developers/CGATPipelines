#!/usr/bin/env bash

# The expected output is a new conda env file merging all conda packages for production pipelines

# Global variables

SCRIPT_NAME="$0"
SCRIPT_OPTS="$@"
SCRIPT_FOLDER=$(dirname $0)
REPO_FOLDER=$(dirname ${SCRIPT_FOLDER})


## auxiliary functions

# function to report issues and exit
report_problem() {
   echo
   echo $1
   echo
   echo " Aborting. "
   exit 1
}


# function to display help message
help_message() {
   echo
   echo " Takes as input all conda env files ending in *-template.yml on: cgat-core, cgat-apps, and cgat-flow."
   echo
   echo " The output is a new conda env file merging all conda packages."
   echo
   echo " ./merge_all_conda_deps.sh "
   echo
   exit 1
}


## the script starts here

if [[ $# -ne 0 ]] ; then

   help_message

fi

TMP_OUTPUT=$(mktemp)

find ${REPO_FOLDER}/../ -regex '.*-template.yml' \
 | xargs /bin/cat \
 | egrep -v '^#|^name|^channels|^dependencies|^$|^- bioconda|^- conda-forge|^- defaults' \
 | egrep -v '^- python$|^- gmap$|^- pybigwig$|^- pysam$|^- r-base$|^- rpy2$|^- scipy$' \
 | sort -u > ${TMP_OUTPUT}

echo
echo "# output generated by ${SCRIPT_NAME} ${SCRIPT_OPTS}"
echo "# on `date`"
echo
echo "name: cgat-f"
echo
echo "channels:"
echo "- bioconda"
echo "- conda-forge"
echo "- defaults"
echo
echo "dependencies:"

sort -u ${TMP_OUTPUT}

